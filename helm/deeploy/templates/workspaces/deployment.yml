apiVersion: apps/v1
kind: Deployment
metadata:
  name: deeploy-workspaces
  namespace: deeploy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: deeploy-workspaces
  template:
    metadata:
      labels:
        app: deeploy-workspaces
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/workspaces/configMap.yml") . | sha256sum }}
        checksum/general-secret: {{ include (print $.Template.BasePath "/general_config/generalConfig.yaml") . | sha256sum }}
        checksum/database: {{ include (print $.Template.BasePath "/db/secret.yaml") . | sha256sum }}
    spec:
      containers:
        - name: deeploy-workspaces
          {{ if not .Values.devMode -}}
          image: "{{ .Values.images.registry }}{{ .Values.images.path }}/deeploy{{ template "awsExtension" . -}}:{{ .Values.images.tag }}"
          command:
            - "/bin/sh"
            - "./start.sh"
            - "workspaces"
          {{- else -}}
          image: "deeploy-workspaces"
          command:
            - "nest"
            - "start"
            - "workspaces"
            - "--watch"
          {{- end}}
          env:
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            {{ if .Values.devMode -}}
            - name: RUN_ENV
              value: 'tilt'
            {{- end}}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: general-config
            - secretRef:
                name: database
            - configMapRef:
                name: workspaces
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 3
      imagePullSecrets:
        - name: image-registry
      {{ if .Values.devMode -}}
      initContainers:
        - name: deeploy-workspaces-init
          command:
            - '/bin/sh'
            - './start-dev.sh'
            - 'workspaces'
          env:
            - name: RUN_ENV
              value: 'tilt'
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
          image: "deeploy-workspaces"
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: general-config
            - secretRef:
                name: workspaces
            - configMapRef:
                name: workspaces
      {{- end }}
