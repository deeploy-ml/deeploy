apiVersion: v1
kind: Secret
metadata:
  name: s3-secret
  namespace: deeploy
  annotations:
    {{ if not .Values.remoteBlobStorage.enabled -}}
    serving.kubeflow.org/s3-endpoint: deeploy-minio.deeploy.svc.cluster.local:9000 
    serving.kubeflow.org/s3-usehttps: "0" 
    {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "AWS_S3") -}}
    serving.kubeflow.org/s3-endpoint: s3.amazonaws.com 
    serving.kubeflow.org/s3-usehttps: "1"
    {{- end }}
type: Opaque
data:
  {{ if not .Values.remoteBlobStorage.enabled -}}
  accesskey: {{ randAlphaNum 20 | b64enc }}
  secretkey: {{ randAlphaNum 40 | b64enc }}
  {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "AWS_S3") -}}
  accesskey: {{ .Values.remoteBlobStorage.aws.s3AccessKey | b64enc }}
  secretkey: {{ .Values.remoteBlobStorage.aws.s3SecretKey | b64enc }}
  {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "GCS") -}}
  gcloud-application-credentials.json: {{ .Values.remoteBlobStorage.gcp.gcloudApplicationCredentialsJson | b64enc }}
  {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "AZURE") -}}
  AZ_CLIENT_ID: {{ .Values.remoteBlobStorage.azure.clientId | b64enc }}
  AZ_CLIENT_SECRET: {{ .Values.remoteBlobStorage.azure.clientSecret | b64enc }}
  AZ_SUBSCRIPTION_ID: {{ .Values.remoteBlobStorage.azure.subscriptionId | b64enc }}
  AZ_TENANT_ID: {{ .Values.remoteBlobStorage.azure.tenantId | b64enc }}
  {{- end }}