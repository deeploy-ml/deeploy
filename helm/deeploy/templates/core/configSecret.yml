apiVersion: v1
kind: Secret
metadata:
  name: core
  namespace: deeploy
type: Opaque
stringData:
  SMTP_URI: smtps://{{ .Values.email.username }}:{{ .Values.email.password }}@{{ .Values.email.smtpHost }}:{{ .Values.email.port }}?skip_ssl_verify=true
  ADMIN_EMAIL: {{ .Values.security.adminCredentials.email }}
  ADMIN_FIRST_NAME: {{ .Values.security.adminCredentials.firstName }}
  ADMIN_LAST_NAME: {{ .Values.security.adminCredentials.lastName }}
  {{ if not .Values.remoteBlobStorage.enabled -}}
  STORAGE_TYPE: "minio"
  MINIO_PORT: "9000"
  MINIO_DOMAIN: {{ template "minioDomain" . }}
  MINIO_SSL: "false"
  {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "AWS_S3") -}}
  STORAGE_TYPE: "aws"
  S3_ACCESS_KEY: {{ .Values.remoteBlobStorage.aws.s3AccessKey | quote }}
  S3_SECRET_KEY: {{ .Values.remoteBlobStorage.aws.s3SecretKey | quote }}
  BUCKET_NAME: {{ .Values.remoteBlobStorage.aws.bucketName | quote }}
  {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "GCS") -}}
  STORAGE_TYPE: "gcs"
  BUCKET_NAME: {{ .Values.remoteBlobStorage.gcp.bucketName | quote }}
  {{- else if and .Values.remoteBlobStorage.enabled (eq .Values.remoteBlobStorage.type "AZURE") -}}
  STORAGE_TYPE: "azure"
  AZURE_CONTAINER_NAME: {{ .Values.remoteBlobStorage.azure.containerName | quote }}
  AZURE_ACCOUNT: {{ .Values.remoteBlobStorage.azure.storageAccountName | quote }}
  AZURE_TENANT_ID: {{ .Values.remoteBlobStorage.azure.tenantId | quote }}
  AZURE_CLIENT_ID: {{ .Values.remoteBlobStorage.azure.clientId | quote }}
  AZURE_CLIENT_SECRET: {{ .Values.remoteBlobStorage.azure.clientSecret | quote }}
  {{- end }}
